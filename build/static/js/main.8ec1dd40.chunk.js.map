{"version":3,"sources":["hooks/index.js","services/login.js","components/Login.js","components/Items.js","components/AddItem.js","components/List.js","components/Lists.js","App.js","index.js"],"names":["useField","type","useState","value","setValue","onChange","event","target","useResource","baseUrl","user","token","setToken","resources","setResources","useEffect","getAll","a","fetch","headers","response","json","data","error","console","log","addResource","object","method","body","JSON","stringify","ok","Error","statusText","concat","updateResource","id","map","resource","deleteResource","url","links","filter","link","rel","href","content","logBase","logToken","login","create","message","Login","setUser","setLogin","username","usernameReset","password","passwordReset","newUser","newUserReset","newPw","newPwReset","handleLogin","preventDefault","loginService","window","localStorage","setItem","handleUserCreate","switchLogin","onSubmit","onClick","Items","items","purchase","border","item","key","quantity","date","itemName","Date","toLocaleDateString","AddItem","list","saveList","modifiedList","setModifiedList","newItem","newItemReset","quantityReset","addToList","List","handleUpdate","add","changeAdd","invertAdd","name","puchasedItem","find","toISOString","updatedList","Lists","logout","lists","listsService","setAdd","newList","resetNewList","App","loggedUser","getItem","parse","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ec1dd40.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * \r\n * @param {*} type \r\n */\r\nexport const useField = (type) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const reset = value => {\r\n        value ? setValue(value) : setValue('')\r\n    }\r\n\r\n    return [{\r\n        type,\r\n        value,\r\n        onChange\r\n    }, reset]\r\n}\r\n\r\n/**\r\n * Custom hook designed to work as a general component that handles all communication\r\n * with a REST-API\r\n * @param {*} baseUrl is the URL of the API\r\n */\r\n\r\nexport const useResource = (baseUrl, user) => {\r\n    const [token, setToken] = useState(null)\r\n    const [resources, setResources] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getAll = async () => {\r\n            const response = await fetch(baseUrl, {\r\n                headers: {\r\n                    'Authorization': `bearer ${user.token}`\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setResources(data)\r\n        }\r\n        try {\r\n            getAll()\r\n            setToken(`bearer ${user.token}`)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }  \r\n    }, [baseUrl, user])\r\n\r\n    //test service provided for debugging\r\n    const logBase = () => {\r\n        console.log(baseUrl)\r\n    }\r\n    //test service provided for debugging\r\n    const logToken = () => {\r\n        console.log(token)\r\n    }\r\n\r\n    const addResource = async (object) => {\r\n        try {\r\n            const response = await fetch(baseUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': token\r\n                },\r\n                body: JSON.stringify(object)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            const data = await response.json()\r\n            setResources(resources.concat(data))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const updateResource = async (id, object) => {\r\n\r\n        try {\r\n            const response = await fetch(`${baseUrl}/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': token\r\n                },\r\n                body: JSON.stringify(object)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            const data = await response.json()\r\n            setResources(resources.map(resource => resource.id !== id ? resource : data))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteResource = async (object) => {\r\n        const url = object.links.filter(link => link.rel === 'self')[0].href\r\n        try {\r\n            await fetch(url, {\r\n                method: 'DELETE'\r\n            })\r\n            setResources({\r\n                ...resources,\r\n                content: resources.content.filter(resource => resource.links.filter(link => link.rel === 'self')[0].href !== url)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const service = {\r\n        logBase,\r\n        logToken,\r\n        addResource,\r\n        updateResource,\r\n        deleteResource\r\n    }\r\n\r\n    return [\r\n        resources, service\r\n    ]\r\n}\r\n\r\nexport default useResource","const baseUrl = '/api/login'\r\n\r\nconst login = async user => {\r\n    const response = await fetch(baseUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    if (!response.ok) {\r\n        throw new Error(response.statusText)\r\n    }\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nconst create = async user => {\r\n    const response = await fetch('/api/users', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    if (!response.ok) {\r\n        const message = await(response.json())\r\n        throw new Error(message.error)\r\n    }\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport default { login, create }","import React, { useState } from 'react';\r\nimport { useField } from '../hooks/index';\r\nimport loginService from '../services/login';\r\n\r\nconst Login = ({ setUser }) => {\r\n    const [login, setLogin] = useState(true)\r\n    const [username, usernameReset] = useField('text')\r\n    const [password, passwordReset] = useField('password')\r\n    const [newUser, newUserReset] = useField('text')\r\n    const [newPw, newPwReset] = useField('password')\r\n\r\n    const handleLogin = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await loginService.login({\r\n                username: username.value,\r\n                password: password.value\r\n            })\r\n\r\n            window.localStorage.setItem(\r\n                'loggedListsAppUser', JSON.stringify(user)\r\n            )\r\n\r\n            usernameReset()\r\n            passwordReset()\r\n            setUser(user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleUserCreate = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            await loginService.create({\r\n                username: newUser.value,\r\n                password: newPw.value\r\n            })\r\n            const user = await loginService.login({\r\n                username: newUser.value,\r\n                password: newPw.value\r\n            })\r\n\r\n            window.localStorage.setItem(\r\n                'loggedListsAppUser', JSON.stringify(user)\r\n            )\r\n\r\n            newUserReset()\r\n            newPwReset()\r\n            setUser(user)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const switchLogin = () => setLogin(!login)\r\n\r\n    return (\r\n        <div>\r\n            {login ?\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div>\r\n                            Username\r\n                            <input {...username} />\r\n                        </div>\r\n                        <div>\r\n                            Password\r\n                            <input {...password} />\r\n                        </div>\r\n                        <button type=\"submit\">Login</button>\r\n                    </form>\r\n                    <button onClick={() => switchLogin()}>Create a new user</button>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1>Create a user</h1>\r\n                    <form onSubmit={handleUserCreate}>\r\n                        <div>\r\n                            Username\r\n                            <input {...newUser} />\r\n                        </div>\r\n                        <div>\r\n                            Password\r\n                            <input {...newPw} />\r\n                        </div>\r\n                        <button type=\"submit\">Create</button>\r\n                    </form>\r\n                    <button onClick={() => switchLogin()}>Cancel</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Items = ({ items, purchase }) => {\r\n    const purchaseButton = itemName => {\r\n        return (\r\n            purchase ? <button onClick={() => purchase(itemName)}>BUY</button> : 'Not yet purchased'\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table border='1'>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Item</td><td>Quantity</td><td>Status</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <tr key={item.item}>\r\n                                <td>{item.item}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.date === null ? purchaseButton(item.item) : `Purchased on ${new Date(item.date).toLocaleDateString()}`}</td>\r\n                                {/*<td><button onClick={() => console.log(item)}>test</button></td>*/}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Items;","import React, { useState } from 'react';\r\nimport { useResource } from '../hooks/index';\r\nimport Items from './Items';\r\nimport { useField } from '../hooks/index';\r\n\r\nconst AddItem = ({ user, list, saveList }) => {\r\n    const [items, itemsService] = useResource('/api/items', user)\r\n    const [modifiedList, setModifiedList] = useState(list)\r\n    const [newItem, newItemReset] = useField('text')\r\n    const [quantity, quantityReset] = useField('number')\r\n\r\n    const addToList = item => {\r\n        setModifiedList({\r\n            ...modifiedList,\r\n            items: [\r\n                ...modifiedList.items,\r\n                {\r\n                    ...item,\r\n                    date: null\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        const item = {\r\n            item: newItem.value,\r\n            quantity: quantity.value\r\n        }\r\n        addToList(item)\r\n        newItemReset()\r\n        quantityReset()\r\n    }\r\n\r\n    const previouslyAddedItems = () => {\r\n        return(\r\n            <div>\r\n                Previously Added Items\r\n                <table>\r\n                    <tbody>\r\n                        {items.map(item => {\r\n                            return(\r\n                                <tr key={item.item}>\r\n                                    <td>{item.item}</td>\r\n                                    <td><button onClick={() => newItemReset(item.item)}>Select</button></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Items items={modifiedList.items} />\r\n            <button onClick={() => saveList(modifiedList)}>Save</button>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    Item:\r\n                    <input {...newItem} />\r\n                </div>\r\n                <div>\r\n                    Quantity\r\n                    <input {...quantity} />\r\n                </div>\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n            {previouslyAddedItems()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddItem;","import React, { useState } from 'react';\r\nimport Items from './Items';\r\nimport AddItem from './AddItem';\r\n\r\nconst List = ({ user, list, handleUpdate }) => {\r\n    const [add, changeAdd] = useState(false)\r\n\r\n    const invertAdd = () => changeAdd(!add)\r\n\r\n    const purchaseItem = itemName => {\r\n        const puchasedItem = {\r\n            ...list.items.find(item => item.item === itemName),\r\n            date: new Date().toISOString()\r\n        }\r\n        const updatedList = {\r\n            ...list,\r\n            items: list.items.map(item => item.item !== itemName ? item : puchasedItem)\r\n        }\r\n        handleUpdate(updatedList)\r\n    }\r\n\r\n    const handleAdd = list => {\r\n        handleUpdate(list)\r\n        invertAdd()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{list.name}</h2>\r\n            {add ?\r\n                <AddItem user={user} list={list} saveList={handleAdd} />\r\n                :\r\n                <Items items={list.items} purchase={purchaseItem} />\r\n            }\r\n            <button onClick={() => invertAdd()}>{add ? 'Cancel' : 'Add items'}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport { useResource, useField } from '../hooks/index';\r\nimport List from './List';\r\n\r\nconst Lists = ({ user, logout }) => {\r\n    const [lists, listsService] = useResource('/api/lists', user)\r\n    const [add, setAdd] = useState(false)\r\n    const [newList, resetNewList] = useField('text')\r\n\r\n    const handleUpdate = list => {\r\n        listsService.updateResource(list.id, list)\r\n    }\r\n\r\n    const handleAdd = event => {\r\n        event.preventDefault()\r\n        try {\r\n            const list = {\r\n                name: newList.value\r\n            }\r\n            listsService.addResource(list)\r\n            resetNewList()\r\n            setAdd(!add)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                logged in as {user.username}\r\n                <button onClick={() => logout()}>Logout</button>\r\n            </p>\r\n            <h1>Lists</h1>\r\n            {add ?\r\n                <form onSubmit={handleAdd}>\r\n                    <div>\r\n                        Name\r\n                        <input {...newList} />\r\n                    </div>\r\n                    <button type=\"submit\">Add</button>\r\n                </form>\r\n                :\r\n                ''\r\n            }\r\n            <button onClick={() => setAdd(!add)}>{add ? 'Cancel' : 'Add new List'}</button>\r\n            {lists.map(list => <List key={list.id} user={user} list={list} handleUpdate={handleUpdate} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Lists;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login'\nimport Lists from './components/Lists'\n\nconst App = () => {\n\tconst [user, setUser] = useState(null)\n\n\tuseEffect(() => {\n\t\tconst loggedUser = window.localStorage.getItem('loggedListsAppUser')\n\t\tif (loggedUser) {\n\t\t\tconst user = JSON.parse(loggedUser)\n\t\t\tsetUser(user)\n\t\t}\n\t}, [])\n\n\tconst logout = () => {\n\t\twindow.localStorage.removeItem('loggedListsAppUser')\n\t\tsetUser(null)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{user === null\n\t\t\t\t? <div><Login setUser={setUser} /></div>\n\t\t\t\t: <div><Lists user={user} logout={logout} /></div>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}